// <auto-generated />
using System;
using MelisaIuliaProiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MelisaIuliaProiect.Migrations
{
    [DbContext(typeof(MelisaIuliaProiectContext))]
    [Migration("20250103151833_CustomerFullNameChange")]
    partial class CustomerFullNameChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MelisaIuliaProiect.Models.Car", b =>
                {
                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Autonomy")
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentID")
                        .HasColumnType("int");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.Property<int?>("SellerID")
                        .HasColumnType("int");

                    b.Property<int>("Torque")
                        .HasColumnType("int");

                    b.Property<int?>("TransmissionID")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleModelID")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypeID")
                        .HasColumnType("int");

                    b.HasKey("VIN");

                    b.HasIndex("EquipmentID");

                    b.HasIndex("SellerID");

                    b.HasIndex("TransmissionID");

                    b.HasIndex("VehicleModelID");

                    b.HasIndex("VehicleTypeID");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.CarFuel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CarVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FuelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CarVIN");

                    b.HasIndex("FuelID");

                    b.ToTable("CarFuel");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Equipment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Infotainment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingAssist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upholstery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wheels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Fuel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FuelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Fuel");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Seller", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.TestDrive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.Property<string>("CarVIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TestDriveDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CarVIN");

                    b.HasIndex("CustomerID");

                    b.ToTable("TestDrive");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Transmission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TransmissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Transmission");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.VehicleModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("VehicleModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("VehicleModel");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.VehicleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("VehicleTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Car", b =>
                {
                    b.HasOne("MelisaIuliaProiect.Models.Equipment", "Equipment")
                        .WithMany("Cars")
                        .HasForeignKey("EquipmentID");

                    b.HasOne("MelisaIuliaProiect.Models.Seller", "Seller")
                        .WithMany("Cars")
                        .HasForeignKey("SellerID");

                    b.HasOne("MelisaIuliaProiect.Models.Transmission", "Transmission")
                        .WithMany("Cars")
                        .HasForeignKey("TransmissionID");

                    b.HasOne("MelisaIuliaProiect.Models.VehicleModel", "VehicleModel")
                        .WithMany("Cars")
                        .HasForeignKey("VehicleModelID");

                    b.HasOne("MelisaIuliaProiect.Models.VehicleType", "VehicleType")
                        .WithMany("Cars")
                        .HasForeignKey("VehicleTypeID");

                    b.Navigation("Equipment");

                    b.Navigation("Seller");

                    b.Navigation("Transmission");

                    b.Navigation("VehicleModel");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.CarFuel", b =>
                {
                    b.HasOne("MelisaIuliaProiect.Models.Car", "Car")
                        .WithMany("CarFuels")
                        .HasForeignKey("CarVIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MelisaIuliaProiect.Models.Fuel", "Fuel")
                        .WithMany("CarFuels")
                        .HasForeignKey("FuelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Fuel");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.TestDrive", b =>
                {
                    b.HasOne("MelisaIuliaProiect.Models.Car", "Car")
                        .WithMany("TestDrives")
                        .HasForeignKey("CarVIN");

                    b.HasOne("MelisaIuliaProiect.Models.Customer", "Customer")
                        .WithMany("TestDrives")
                        .HasForeignKey("CustomerID");

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Car", b =>
                {
                    b.Navigation("CarFuels");

                    b.Navigation("TestDrives");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Customer", b =>
                {
                    b.Navigation("TestDrives");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Equipment", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Fuel", b =>
                {
                    b.Navigation("CarFuels");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Seller", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.Transmission", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.VehicleModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MelisaIuliaProiect.Models.VehicleType", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
